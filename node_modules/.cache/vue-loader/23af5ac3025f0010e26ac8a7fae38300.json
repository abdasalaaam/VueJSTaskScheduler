{"remainingRequest":"/Users/abudsalem/Desktop/app copy/client/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/abudsalem/Desktop/app copy/client/src/dialog.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/abudsalem/Desktop/app copy/client/src/dialog.vue","mtime":1668887388895},{"path":"/Users/abudsalem/Desktop/app copy/client/node_modules/cache-loader/dist/cjs.js","mtime":1668475758288},{"path":"/Users/abudsalem/Desktop/app copy/client/node_modules/babel-loader/lib/index.js","mtime":1668475758397},{"path":"/Users/abudsalem/Desktop/app copy/client/node_modules/cache-loader/dist/cjs.js","mtime":1668475758288},{"path":"/Users/abudsalem/Desktop/app copy/client/node_modules/vue-loader/lib/index.js","mtime":1668475756457}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport VueToastr from 'vue-toastr'\n  export default {\n  name : 'Dialog',\n  created() {\n  },\n  props:  {\n      title : String,\n      rowList : Array,\n      childData : Object,\n      show : Boolean\n  },\n  methods: {\n      validateAndAdd() {\n          if (this.$refs.form.validate()) {\n              this.changeRows()\n          }\n      },\n      changeRows() {\n          this.$refs.form.resetValidation()\n          this.show = false\n          this.$emit(\"newRow\", this.childData)\n      },\n  },\n    data () {\n      return {\n        show : false,\n        rules: {\n          required: value => !!value  || 'Required.',\n          distinct: value => !this.childData.titles.includes(value) || 'Must be a distinct title',\n          length: value => value.length < 30 || 'Value too long'\n          },\n      }\n    },\n  }\n",{"version":3,"sources":["dialog.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA8FA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"dialog.vue","sourceRoot":"src","sourcesContent":["<template>\n    <div class=\"text-center\">\n      <v-dialog\n        v-model = 'show'\n        width=\"300\"\n      >\n        <v-card>\n          <v-card-title v-if = 'childData.adding' class=\"primary\" style = \"color:white;\">\n            <v-icon \n            style = \"color:white;\" \n            >\n            mdi-plus-circle</v-icon>\n            Add Task\n          </v-card-title>\n        <v-card-title v-else = 'childData.adding' class=\"primary\" style = \"color:white;\">\n            <v-icon \n            style = \"color:white;\" >\n            mdi-square-edit-outline</v-icon>\n            Edit Task\n        </v-card-title>\n          \n          <v-container>\n            <v-row no-gutters>\n              <v-form\n              ref=\"form\"\n              lazy-validation>\n                <v-col cols = \"12\" sm = \"6\" md=\"12\" v-if = 'childData.adding'>\n                    <v-text-field \n                    :rules=\"[rules.required, rules.distinct, rules.length]\"\n                    label = \"Title\"\n                    v-model = \"childData.title\" \n                    outlined>\n                    </v-text-field>\n                  </v-col>\n\n                <v-col cols = \"12\" sm = \"6\" md=\"12\" >\n                    <v-text-field\n                    label = \"Description\"\n                    v-model = \"childData.description\" \n                    :rules=\"[rules.required]\"\n                    outlined></v-text-field>\n                </v-col>\n\n                <v-col cols = '12' sm ='2' md =\"12\">\n                    <v-text-field \n                    label = \"Deadline\"\n                    v-model= \"childData.dead\"\n                    outlined \n                    :rules=\"[rules.required]\"\n                    type = \"date\"></v-text-field>\n                    <p>Priority</p>\n                    <v-radio-group \n                    v-model=\"childData.priority\"\n                    :rules=\"[rules.required]\"\n                    row>\n                        <v-radio label=\"Low\" value=\"Low\"></v-radio>\n                        <v-radio label=\"Med\" value=\"Med\"></v-radio>\n                        <v-radio label=\"High\" value=\"High\"></v-radio>\n                    </v-radio-group>\n                </v-col>\n              </v-form>\n            </v-row>\n          </v-container>\n\n          <v-divider></v-divider>\n  \n          <v-card-actions>\n            <v-spacer></v-spacer>\n            <v-btn \n            color=\"primary\" \n            @click=\"validateAndAdd()\" \n            v-if = 'childData.adding'>\n                <v-icon>mdi-plus-circle</v-icon>\n                Add\n            </v-btn>\n            <v-btn \n            color=\"primary\" \n            @click=\"validateAndAdd()\" \n            v-else = 'childData.adding'>\n                <v-icon>mdi-square-edit-outline</v-icon>\n                Edit\n            </v-btn>\n            <v-btn\n              color=\"error\"\n              @click=\"$emit('newRow', -1)\">\n                Cancel\n            </v-btn>\n          </v-card-actions>\n        </v-card>\n      </v-dialog>\n    </div>\n  </template>\n  \n  <script>\n  import VueToastr from 'vue-toastr'\n    export default {\n    name : 'Dialog',\n    created() {\n    },\n    props:  {\n        title : String,\n        rowList : Array,\n        childData : Object,\n        show : Boolean\n    },\n    methods: {\n        validateAndAdd() {\n            if (this.$refs.form.validate()) {\n                this.changeRows()\n            }\n        },\n        changeRows() {\n            this.$refs.form.resetValidation()\n            this.show = false\n            this.$emit(\"newRow\", this.childData)\n        },\n    },\n      data () {\n        return {\n          show : false,\n          rules: {\n            required: value => !!value  || 'Required.',\n            distinct: value => !this.childData.titles.includes(value) || 'Must be a distinct title',\n            length: value => value.length < 30 || 'Value too long'\n            },\n        }\n      },\n    }\n  </script>\n\n<style>\n\n</style>"]}]}