{"remainingRequest":"/Users/abudsalem/Desktop/app copy/client/node_modules/babel-loader/lib/index.js!/Users/abudsalem/Desktop/app copy/client/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/abudsalem/Desktop/app copy/client/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/abudsalem/Desktop/app copy/client/src/toDo.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/abudsalem/Desktop/app copy/client/src/toDo.vue","mtime":1668811727463},{"path":"/Users/abudsalem/Desktop/app copy/client/node_modules/cache-loader/dist/cjs.js","mtime":1668475758288},{"path":"/Users/abudsalem/Desktop/app copy/client/node_modules/babel-loader/lib/index.js","mtime":1668475758397},{"path":"/Users/abudsalem/Desktop/app copy/client/node_modules/cache-loader/dist/cjs.js","mtime":1668475758288},{"path":"/Users/abudsalem/Desktop/app copy/client/node_modules/vue-loader/lib/index.js","mtime":1668475756457}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//master\nimport Dialog from \"./dialog.vue\";\nimport moment from 'moment';\nimport VueToastr from 'vue-toastr';\nexport default {\n  //life cycles\n  created() {},\n\n  //components\n  components: {\n    Dialog,\n    VueToastr\n  },\n  //methods\n  methods: {\n    addRow(newRow) {\n      if (newRow != -1) {\n        if (this.currRow == -1) {\n          this.rows.push(newRow);\n          this.toast('Successfully added task!');\n        } else {\n          this.rows[this.currRow] = newRow;\n          this.toast(\"Successfully edited task!\");\n        }\n      }\n\n      this.show = false;\n    },\n\n    openNewDialog() {\n      this.parentData = {\n        adding: true,\n        titles: this.rows.map(a => a.title),\n        title: \"\",\n        description: \"\",\n        dead: \"\",\n        priority: \"\"\n      };\n      this.show = true;\n      this.currRow = -1;\n    },\n\n    openOldDialog(a, index) {\n      this.parentData = {\n        adding: false,\n        titles: this.rows.map(a => a.title),\n        title: a.title,\n        description: a.description,\n        dead: a.dead,\n        priority: a.priority\n      };\n      this.show = true;\n      this.currRow = index;\n    },\n\n    closeDialog() {\n      this.show = false;\n    },\n\n    deleteRow(i) {\n      this.rows.splice(i, 1);\n      this.completeRows.splice(i, 1);\n      this.$toasted.show('Successfully deleted task!', {\n        theme: \"outline\",\n        position: \"bottom-right\",\n        duration: 5000\n      });\n    },\n\n    formatDate(date) {\n      if (date) {\n        return moment(date, \"YYYY/MM/DD\").format('MM/DD/YYYY');\n      } else return '';\n    },\n\n    toast(str) {\n      this.$toasted.show(str, {\n        theme: \"outline\",\n        position: \"bottom-right\",\n        duration: 5000\n      });\n    }\n\n  },\n  //watchers\n  watch: {},\n  //computed\n  computed: {},\n  //global vars\n  data: global => ({\n    rows: [],\n    currRow: -1,\n    parentData: {\n      titles: [],\n      title: \"\",\n      description: \"\",\n      dead: \"\",\n      priority: \"\"\n    },\n    show: false,\n    completeRows: []\n  })\n};",{"version":3,"sources":["toDo.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n<v-app style='margin:30px'>\n    <v-card>\n    <!--panel header-->\n        <v-card-title class='headline primary' primary-title style='color: white; margin: auto;'>\n            <v-spacer> <div class = \"text-center\">\n                <v-icon style='color: white;'>mdi-view-headline</v-icon>\n                FRAMEWORKS\n            </div>\n            </v-spacer>\n            <div class = \"text-right\">\n                <template>\n                    <v-btn\n                        color=\"primary\"\n                        dark\n                        @click = \"openNewDialog()\"\n                    >\n                    <v-icon>mdi-plus</v-icon>\n                        Add\n                    </v-btn>\n                </template>\n                <Dialog :show = \"show\" :childData = \"parentData\" @newRow = \"addRow($event)\"></Dialog>\n            </div>\n        </v-card-title>\n    <!--panel body-->\n        <v-simple-table style='margin: 20px;'>\n            <template >\n            <!--table header-->\n                <thead>\n                <tr>\n                    <th>\n                        Title\n                    </th>\n                    <th>\n                        Description\n                    </th>\n                    <th>\n                        Deadline\n                    </th>\n                    <th>\n                        Priority\n                    </th>\n                    <th>\n                        Is Complete\n                    </th>\n                    <th>\n                        Action\n                    </th>\n                </tr>\n                </thead>\n            <!--table body-->\n                <tbody>\n                    <tr v-for = '(a,ai) in rows' :key = \"ai\">\n                        <td>{{a.title}}</td>\n                        <td>{{a.description}}</td>\n                        <td>{{formatDate(a.dead)}}</td>\n                        <td>{{a.priority}}</td>\n                        <td><input \n                            type = \"checkbox\" \n                            id = \"checkbox\"\n                            label = \"Is Complete\"\n                            :value = \"a.title\"\n                            v-model = \"completeRows\"\n                            ></td>\n                        <td><v-row v-if = \"!completeRows.includes(a.title)\">\n                            <v-btn\n                            color = \"primary\"\n                            dark\n                            @click.native = \"openOldDialog(a, ai)\"\n                            \n                            >\n                            <v-icon>mdi-square-edit-outline</v-icon>\n                                Update\n                            </v-btn>\n                        </v-row>\n                        <v-row>\n                            <v-btn\n                            color = \"error\"\n                            dark\n                            @click = \"deleteRow(ai)\"\n                            >\n                            <v-icon>mdi-close-circle</v-icon>\n                                Delete\n                            </v-btn>\n                        </v-row>\n                        </td>\n                    </tr>\n                </tbody>\n            </template>\n        </v-simple-table>\n    </v-card>\n    </v-app>\n</template>\n<script>\n//master\nimport Dialog from \"./dialog.vue\"\nimport moment from 'moment'\nimport VueToastr from 'vue-toastr'\n\n    export default {\n    //life cycles\n        created(){},\n\n    //components\n    components : {\n        Dialog, VueToastr\n    },\n    //methods\n        methods: {\n            addRow(newRow) {\n                if (newRow != -1) {\n                    if (this.currRow == -1) {\n                        this.rows.push(newRow)\n                        this.toast('Successfully added task!')\n                    }\n                    else {\n                        this.rows[this.currRow] = newRow\n                        this.toast(\"Successfully edited task!\")\n                    }\n                }\n                this.show = false\n            },\n            openNewDialog() {\n                this.parentData = {\n                    adding : true,\n                    titles : this.rows.map(a => a.title),\n                    title: \"\",\n                    description : \"\",\n                    dead : \"\",\n                    priority : \"\"\n                }\n                this.show = true\n                this.currRow = -1\n            },\n            openOldDialog(a, index) {\n                this.parentData = {\n                    adding : false,\n                    titles : this.rows.map(a => a.title),\n                    title: a.title,\n                    description : a.description,\n                    dead : a.dead,\n                    priority : a.priority\n                }\n                this.show = true\n                this.currRow = index\n            },\n            closeDialog() {\n                this.show = false\n            },\n            deleteRow(i) {\n                this.rows.splice(i, 1)\n                this.completeRows.splice(i, 1)\n                this.$toasted.show('Successfully deleted task!',  { \n                    theme: \"outline\", \n                    position: \"bottom-right\", \n                    duration : 5000\n                })\n            },\n            formatDate(date) {\n                if (date) {\n                    return moment(date, \"YYYY/MM/DD\").format('MM/DD/YYYY')\n                }\n                else return ''\n            },\n            toast(str) {\n                this.$toasted.show(str,  { \n                        theme: \"outline\", \n                        position: \"bottom-right\", \n                        duration : 5000\n                        })\n            }\n        }, \n    //watchers\n        watch: {},\n    //computed\n        computed: {},\n    //global vars\n          data: global => ({\n            rows: [],\n            currRow : -1,\n            parentData: {\n                titles : [],\n                title: \"\",\n                description: \"\",\n                dead : \"\",\n                priority : \"\"\n            },\n            show : false,\n            completeRows : [],\n        }),\n    }\n</script>"],"sourceRoot":"src"}]}